syntax = "proto3";

option go_package = "./consumerPurchase";

import "google/protobuf/timestamp.proto";

service ConsumerPurchaseService {
    rpc CreateConsumerMinutesAccount(CreateConsumerMinutesAccountRequest) returns (CreateConsumerMinutesAccountResponse);
    rpc GetConsumerPurchaseBalance(GetConsumerPurchaseBalanceRequest) returns (GetConsumerPurchaseBalanceResponse);
    rpc GetConsumerPurchaseHistory(GetConsumerPurchaseHistoryRequest) returns (GetConsumerPurchaseHistoryResponse);
    rpc AvailableOffers(AvailableOffersRequest) returns (AvailableOffersResponse);
    rpc CreateOffer(CreateOfferRequest) returns (CreateOfferResponse);
    rpc CreatePurchaseTransaction(CreatePurchaseTransactionRequest) returns (CreatePurchaseTransactionResponse);
    rpc UpdatePurchaseTransaction(UpdatePurchaseTransactionRequest) returns (UpdatePurchaseTransactionResponse);
    rpc GetRefundAvailabilityDetails(GetRefundAvailabilityDetailsRequest) returns (GetRefundAvailabilityDetailsResponse);
    rpc RequestRefund (RequestRefundRequest) returns (RequestRefundResponse);
    rpc UpdateRefundTransaction (UpdateRefundTransactionRequest) returns (UpdateRefundTransactionResponse);
    rpc GetCallTransactionHistoryConsumer (GetCallTransactionHistoryConsumerRequest) returns (GetCallTransactionHistoryConsumerResponse);
    rpc CreateRewardTransaction(CreateRewardTransactionRequest) returns (CreateRewardTransactionResponse);
    rpc InitiatePurchaseTransaction (InitiatePurchaseTransactionRequest) returns (InitiatePurchaseTransactionResponse);
    rpc GetPurchaseTransactionInfo (GetPurchaseTransactionInfoRequest) returns (GetPurchaseTransactionInfoResponse);
    rpc CreateCallTransaction(CreateCallTransactionRequest) returns (CreateCallTransactionResponse);

    }

    // Purchase Status
    // Success, InProgress, Failed, Reward
    
    // Refund
    // Unavailable, Available, InProgress, Success

enum Transaction_Status {
    transaction_success = 0;
    transaction_in_progress = 1;
    transaction_failed = 2;
    transaction_reward = 3;
}

enum Refund_Status {
    refund_success = 0;
    refund_in_progress = 1;
    refund_unavailable = 2;
    refund_available = 3;
}

// enum Transaction_Status {
//     created = 0; // Not available => Refunding
//     pending = 1; // Not available => Refunding
//     in_transit = 2; // Not available => Refunding
//     succeeded = 3; // Not available => Refunded
//     failed = 4; // Available => Refund
//     canceled = 5; // Available => Refund
//     not_applicable = 6; // Minutes already consumed => Used
//     refund_available = 7; // Available => Refund
//     reward = 8; // Available => Reward need ui
// }

enum PaymentPlatform {
    stripe = 0;
    razorpay = 1;
}


message CreateConsumerMinutesAccountRequest {
    int64 userId = 1;
}

message CreateConsumerMinutesAccountResponse {
    string message = 1;
}

message GetConsumerPurchaseBalanceRequest {
    int64 userId = 1;
}

message GetConsumerPurchaseBalanceResponse {
    double consumerPurchaseBalance = 1;
}

message Purchase {
    int64 transactionId = 1;
    string offerName = 2;
    int32 totalMinutes = 3;
    double totalUnusedMinutes = 4;
    double totalRefundAmount = 5;
    google.protobuf.Timestamp purchaseTimestamp = 6;
    double purchaseAmount = 7;
    string purchaseCurrency = 8;
    Transaction_Status transactionStatus = 9;
    Refund_Status refundStatus = 10;
}

message GetConsumerPurchaseHistoryRequest {
    int64 userId = 1;
}

message GetConsumerPurchaseHistoryResponse {
    repeated Purchase consumerPurchaseHistory = 1;
}

message Offer {
    int64 offerId = 1;
    string offerName = 2;
    int32 numberOfMinutes = 3;
    double totalPrice = 4;
    double pricePerMinute = 5;
    string currency = 6;
    string country = 7;
}

message AvailableOffersRequest {
    string country = 1;
}

message AvailableOffersResponse {
    repeated Offer offers = 1;
}

message CreateOfferRequest {
    string offerName = 1;
    int32 numberOfMinutes = 2;
    double totalPrice = 3;
    string currency = 4;
    string country = 5;
}

message CreateOfferResponse {
    int64 offerId = 1;
}

message CreatePurchaseTransactionRequest {
    int64 userId = 1;
    int64 offerId = 2;
}

message CreatePurchaseTransactionResponse {
    int64 purchaseTransactionId = 1;
}

message UpdatePurchaseTransactionRequest {
    int64 purchaseTransactionId = 1;
    string PaymentId = 2;
    string Status = 3;
}   

message UpdatePurchaseTransactionResponse {
    string message = 1;
}

message GetRefundAvailabilityDetailsRequest{
    int64 transactionId = 1;
}

message GetRefundAvailabilityDetailsResponse {
    string offerName = 1;
    double offerMinutes = 2;
    double minutesUsed = 3;
    double minutesUnused = 4;
    double refundAmountAvailable = 5;
    string currency = 6;
}

message RequestRefundRequest {
    int64 orderId = 1;
    int64 userId = 2;
    double amount = 3;
    string currency = 4;
    string moduleName = 5;
    string country = 6;
}

message RequestRefundResponse {
    int64 orderId = 1;
    int64 userId = 2;
    double amount = 3;
    string currency = 4;
    string status = 5;
    string remarks = 6;
}

message UpdateRefundTransactionRequest {
    int64 purchaseTransactionId = 1;
    string RefundId = 2;
    string Status = 3;
}   

message UpdateRefundTransactionResponse {
    string message = 1;
}

message GetCallTransactionHistoryConsumerRequest {
    int64 userId = 1;
}

message callTransaction {
    int64 callId = 1;
    string location = 2;
    string context = 3;
    int64 durationSeconds = 4;
    int64 charge = 5;
    google.protobuf.Timestamp timestamp = 6; 
}

message GetCallTransactionHistoryConsumerResponse {
    repeated callTransaction callTransactions = 1;
}

message CreateRewardTransactionRequest {
    int64 userId = 1;
    int64 rewardId = 2;
    double rate = 3;
    double amount = 4;
}

message CreateRewardTransactionResponse {
    int64 rewardTransactionId = 1;
}

message InitiatePurchaseTransactionRequest {
  int64 userId = 1;
  int64 offerId = 2;
  string email = 3;
  string moduleName = 4;
  string country = 5;
}

message InitiatePurchaseTransactionResponse {
  string stripeCustomerId = 1;
  string clientSecret = 2;
  string ephemeralKeySecret = 3;
  int64 orderId = 4;
  string razorPayOrderId = 5;
  PaymentPlatform paymentPlatform = 6;
}

message GetPurchaseTransactionInfoRequest {
    int64 orderId = 1;
    string country = 2;
}
  
message GetPurchaseTransactionInfoResponse {
    double amount = 1;
    string currency = 2;
    string status = 3;
}

message CreateCallTransactionRequest {
    int64 userId = 1;
    int64 Duration = 2;
}

message CreateCallTransactionResponse {
    string message = 1;
}