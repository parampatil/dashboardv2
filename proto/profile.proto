syntax = "proto3";

option go_package = "./sample";

import "google/protobuf/timestamp.proto";

service ProfileService {
    rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse);
    rpc GetUserCountry(GetUserCountryRequest) returns (GetUserCountryResponse);
    rpc GetUserDetailsByUserId(GetUserDetailsByUserIdRequest) returns (GetUserDetailsByUserIdResponse);
    rpc UpdateUserDetails(UpdateUserDetailsRequest) returns (UpdateUserDetailsResponse);
    rpc UpdateUserCountry(UpdateUserCountryRequest) returns (UpdateUserCountryResponse);
    rpc GetTotalPageCount(GetTotalPageCountRequest) returns (GetTotalPageCountResponse);
}

message User {
    string uid = 1;
    string userName = 2;
    string firstName = 3;
    string middleName = 4;
    string lastName = 5;
    string dateOfBirth = 6;  // Using string for DATE type
    string displayName = 7;
    string phoneNumber = 8;
    string email = 9;
    string pin = 10;
    string bio = 11;
    string userType = 12;
    string proximityAsSkill = 13;
    google.protobuf.Timestamp createdTimestamp = 14;
    google.protobuf.Timestamp lastUpdatedTimestamp = 15;
    string createdBy = 16;
    string updatedBy = 17;
    bool isActive = 18;
    int64 userId = 19;
    string passwordHash = 20;
    string country = 21;
}

message GetAllUsersRequest {
    // Optional pagination parameters
    int64 pageSize = 1;
    int64 pageNumber = 2;
}

message GetAllUsersResponse {
    repeated User users = 1;
    int64 totalCount = 2;
}

// Request and response for fetching user country by UserID
message GetUserCountryRequest {
    int64 userId = 1;
}

message GetUserCountryResponse {
    int64 userId = 1;
    string country = 2;
}

// Request and response for fetching full user details by UserID
message GetUserDetailsByUserIdRequest {
    int64 userId = 1;
}

message GetUserDetailsByUserIdResponse {
    User user = 1;
}

message UpdateUserDetailsRequest {
    int64 userId = 1;
    string userName = 2;
    string firstName = 3;
    string middleName = 4;
    string lastName = 5;
    string dateOfBirth = 6;
    string displayName = 7;
    string phoneNumber = 8;
    string email = 9;
    string pin = 10;
    string bio = 11;
    string userType = 12;
    string proximityAsSkill = 13;
    string updatedBy = 14;
    bool isActive = 15;
    string country = 16;
}

message UpdateUserDetailsResponse {
    bool success = 1;
    string message = 2;
}

message UpdateUserCountryRequest {
    int64 userId = 1;
    string country = 2;
}

message UpdateUserCountryResponse {
    bool success = 1;
    string message = 2;
}

// Request for fetching total page count
message GetTotalPageCountRequest {
    int64 perPageEntries = 1; // Number of entries per page
}

// Response containing total number of users and total page count
message GetTotalPageCountResponse {
    int64 totalUserCount = 1;     // Total number of users in DB
    int64 totalPageCount = 2; // Computed total pages
}